<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <artifactId>testproject</artifactId>
    <groupId>com.nt.neocloud4j</groupId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <!--context.root>testproject</context.root-->

        <failOnMissingWebXml>false</failOnMissingWebXml>
        <camel.xstream.version>2.21.0</camel.xstream.version>
        <xstream.version>1.4.10</xstream.version>
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>
        <postgres-lib-version>8.1-407.jdbc3</postgres-lib-version>
        <postgres-maven-version>1.5</postgres-maven-version>
        <postgres-liquibase-lib-version>8.1-407.jdbc3</postgres-liquibase-lib-version>
        <maven-failsafe-plugin.version>2.18</maven-failsafe-plugin.version>
        <docker.maven.plugin.version>1.4.9</docker.maven.plugin.version>
        <maven-jar-plugin.version>3.1.0</maven-jar-plugin.version>
        <maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jib-maven-plugin.version>3.2.1</jib-maven-plugin.version>

        <h2.version>1.4.200</h2.version>
        <env>local-h2</env>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.5.1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
            <version>2.1.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.zaxxer</groupId>
                    <artifactId>HikariCP</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-batch</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>com.nt.neocloud4j</groupId>
            <artifactId>neocloud4j-core</artifactId>
            <version>0.0.11</version>
        </dependency>
        <dependency>
            <groupId>com.nt.neocloud4j</groupId>
            <artifactId>neocloud4j-people</artifactId>
            <version>0.0.11</version>
        </dependency>
        <dependency>
            <groupId>com.nt.neocloud4j</groupId>
            <artifactId>neocloud4j-security</artifactId>
            <version>0.0.11</version>
        </dependency>
        <dependency>
            <groupId>com.nt.neocloud4j</groupId>
            <artifactId>neocloud4j-coreui</artifactId>
            <version>0.0.11</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>0.9.1</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.23.1-GA</version>
        </dependency>


        <!-- Test -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.6</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.10.10</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <!-- Exclude JUnit 4 from starter-test (and all other related test-starter, i.e
			     those for security and project reactor -->
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Provide JUnit 5 API -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>1.7.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.7.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>5.7.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
                <excludes>
                    <exclude>**/*.zip</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                    <fork>true</fork>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>h2</id>
            <properties>
                <db>h2</db>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <version>${h2.version}</version>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>postgres</id>
            <properties>
                <db>postgres</db>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <scope>runtime</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>dropDb</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>1.0.0</version>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <file>src/main/resources/env/${env}/application.properties</file>
                                    </files>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>${postgres-maven-version}</version>
                        <executions>
                            <execution>
                                <id>create-core-database</id>
                                <configuration>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <driver>${spring.datasource.driver-class-name}</driver>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <url>${spring.datasource.url}</url>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <username>${spring.datasource.username}</username>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <password>${spring.datasource.password}</password>
                                    <srcFiles>
                                        <srcFile>src/main/resources/env/${env}/dropDb.sql</srcFile>
                                    </srcFiles>
                                    <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                                </configuration>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgres-liquibase-lib-version}</version>
                            </dependency>
                            <dependency>
                                <groupId>com.h2database</groupId>
                                <artifactId>h2</artifactId>
                                <version>${h2.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>updateDb</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>1.0.0</version>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <file>src/main/resources/env/${env}/application.properties</file>
                                    </files>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <version>4.5.0</version>
                        <configuration>
                            <changeLogFile>changelogs/coreapp-dbchangelog-master.xml</changeLogFile>
                            <!--suppress UnresolvedMavenProperty -->
                            <driver>${spring.datasource.driver-class-name}</driver>
                            <!--suppress UnresolvedMavenProperty -->
                            <url>${spring.datasource.url}</url>
                            <!--suppress UnresolvedMavenProperty -->
                            <username>${spring.datasource.username}</username>
                            <!--suppress UnresolvedMavenProperty -->
                            <password>${spring.datasource.password}</password>
                            <propertyFileWillOverride>true</propertyFileWillOverride>
                            <propertyFile>liquibase2.properties</propertyFile>
                            <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>update</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgres-liquibase-lib-version}</version>
                            </dependency>
                            <dependency>
                                <groupId>com.h2database</groupId>
                                <artifactId>h2</artifactId>
                                <version>${h2.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>install-reactui</id>
            <properties>
                <skip.docker.build>true</skip.docker.build>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-coreapp-template</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.nt.neocloud4j</groupId>
                                            <artifactId>neocloud4j-coreui</artifactId>
                                            <outputDirectory>target/coreui_src</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>copy-coreapp-template</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>frontworking</outputDirectory>
                                    <encoding>UTF-8</encoding>
                                    <resources>
                                        <resource>
                                            <directory>target/coreui_src/frontend</directory>
                                            <includes>
                                                <include>**/*.*</include>
                                                <include>**/*</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-package-json</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>frontworking</outputDirectory>
                                    <encoding>UTF-8</encoding>
                                    <overwrite>true</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>frontend</directory>
                                            <includes>
                                                <include>**/*.*</include>
                                                <include>**/*</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>npm-install</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <configuration>
                            <nodeVersion>v14.17.0</nodeVersion>
                            <npmVersion>6.14.13</npmVersion>
                            <workingDirectory>./frontworking</workingDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>Install node and npm locally</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>install-node-and-npm</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>npm install</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <arguments>install --legacy-peer-deps --prefer-offline --no-audit --progress=false</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>npm-build</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <configuration>
                            <nodeVersion>v14.17.0</nodeVersion>
                            <npmVersion>6.14.13</npmVersion>
                            <workingDirectory>./frontworking</workingDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>npm run build</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <configuration>
                                    <arguments>run build</arguments>
                                    <environmentVariables>
                                        <REACT_APP_ROUTER_BASE>/</REACT_APP_ROUTER_BASE>
                                        <REACT_APP_CONTEXT_ROOT></REACT_APP_CONTEXT_ROOT>
                                        <PUBLIC_URL>/</PUBLIC_URL>
                                        <REACT_APP_BUILD_DATETIME>${timestamp}</REACT_APP_BUILD_DATETIME>
                                        <REACT_APP_BUILD_VERSION>${env.APP_BUILD_VERSION}</REACT_APP_BUILD_VERSION>
                                        <REACT_APP_VERSION>1.0-SNAPSHOT</REACT_APP_VERSION>
                                    </environmentVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>fatjar</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                                <configuration>
                                    <finalName>testproject</finalName>
                                    <classifier>exec</classifier>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <configuration>
                            <from>
                                <image>neocloud4j/base-jdk17</image>
                            </from>
                            <to>
                                <image>neocloud4j/testproject:latest</image>
                                <auth>
                                    <username>${DOCKER_HUB_USERNAME}</username>
                                    <password>${DOCKER_HUB_PASSWORD}</password>
                                </auth>
                            </to>
                            <tags>
                                <tag>${project.version}</tag>
                            </tags>
                            <container>
                                <ports>
                                    <port>8080</port>
                                </ports>
                                <volumes>
                                    <volume>/logs</volume>
                                    <volume>/spring-config</volume>
                                    <volume>/neocloud4j/data-generation</volume>
                                    <volume>/neocloud4j/export</volume>
                                    <volume>/neocloud4j/logs</volume>
                                    <volume>/neocloud4j/thumbnails</volume>
                                </volumes>
                            </container>
                        </configuration>
                        <executions>
                            <execution>
                                <id>deploy-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>docker-snapshot</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>${jib-maven-plugin.version}</version>
                        <configuration>
                            <from>
                                <image>neocloud4j/base-jdk17</image>
                            </from>
                            <to>
                                <image>neocloud4j/testproject:latest-snapshot</image>
                                <auth>
                                    <username>${DOCKER_HUB_USERNAME}</username>
                                    <password>${DOCKER_HUB_PASSWORD}</password>
                                </auth>
                            </to>
                            <tags>
                                <tag>${project.version}</tag>
                            </tags>
                            <container>
                                <ports>
                                    <port>8080</port>
                                </ports>
                                <volumes>
                                    <volume>/logs</volume>
                                    <volume>/spring-config</volume>
                                    <volume>/neocloud4j/data-generation</volume>
                                    <volume>/neocloud4j/export</volume>
                                    <volume>/neocloud4j/logs</volume>
                                    <volume>/neocloud4j/thumbnails</volume>
                                    <volume>/neocloud4j/localDb</volume>
                                </volumes>
                            </container>
                            <extraDirectories>
                                    <permissions>
                                        <permission>
                                            <file>/neocloud4j/localDb</file>
                                            <mode>777</mode>
                                        </permission>
                                        <permission>
                                            <file>/neocloud4j/localDb/testproject.mv.db</file>
                                            <mode>777</mode>
                                        </permission>
                                        <permission>
                                            <file>/neocloud4j/localDb/testproject.trace.db</file>
                                            <mode>777</mode>
                                        </permission>
                                    </permissions>
                                    <paths>
                                        <path>
                                            <from>frontworking/build</from>
                                            <into>/app/resources/public</into>
                                        </path>
                                        <path>
                                            <from>target/localDb</from>
                                            <into>/neocloud4j/localDb</into>
                                        </path>
                                    </paths>
                            </extraDirectories>
                        </configuration>
                        <executions>
                            <execution>
                                <id>deploy-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


    <repositories>
        <repository>
            <id>central</id>
            <name>Maven Repository Switchboard</name>
            <layout>default</layout>
            <url>https://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>jboss.org</id>
            <name>JBoss Repository</name>
            <url>https://repository.jboss.org/nexus/content/groups/public/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/libs-milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>docker-compose</id>
            <name>Docker compose</name>
            <url>https://dl.bintray.com/palantir/releases</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>nexitia.com</id>
            <name>Nexitia releases</name>
            <url>http://nexus.nexitia.com/repository/nexitia-releases/</url>
            <snapshots>
                <checksumPolicy>ignore</checksumPolicy>
            </snapshots>
            <releases>
                <checksumPolicy>ignore</checksumPolicy>
            </releases>
        </repository>
        <repository>
            <id>archetype</id>
            <name>Nexitia archetypes</name>
            <url>http://nexus.nexitia.com/repository/nexitia-releases/</url>
            <releases>
                <checksumPolicy>ignore</checksumPolicy>
            </releases>
        </repository>
    </repositories>

</project>
